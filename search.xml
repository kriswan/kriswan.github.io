<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
    
    <entry>
      <title><![CDATA[Alfred介绍]]></title>
      <url>http://kriswan.github.io/2016/06/09/Alfred%E4%BB%8B%E7%BB%8D/</url>
      <content type="html"><![CDATA[<p><img src="/images/Alfred-icon.jpg" alt="/images/Alfred-icon.jpg"></p>
<blockquote>
<p>以前只是听说alfred比mac自带的搜索工具spotlight要强大很多，下载下来发现其实也没体验到有多强大，最近这几天闲来无聊，把玩mac的时候尝试了下alfred的其他功能，不得不说太强大了，so powerful !</p>
<p>Alfred is an award-winning app for Mac OS X which boosts your efficiency with hotkeys, keywords, text expansion and more. Search your Mac and the web, and be more productive with custom actions to control your Mac.</p>
</blockquote>
<h2 id="基础功能"><a href="#基础功能" class="headerlink" title="基础功能"></a>基础功能</h2><ul>
<li><code>打开应用程序</code>, 覆盖了spotlight的所有功能， and there is more</li>
<li><code>简单搜索</code>，直接在输入框里面输入你需要的关键词，回车即提交Google搜索</li>
<li><code>定位文件</code>，ctrl-space 呼出Alfred后，键入空格，输入你要查找文件名，即可定位文件，回车打开，command+回车打开文件所在文件夹</li>
<li><code>复杂操作文件</code>：通过find、open、in等关键词搜索文件。find是定位文件，open是定位并打开文件，in是在文件中进行全文检索，三种检索方式基本上可以找到任何你想找的文件</li>
<li><code>操作Shell</code>：输入<code>&gt;</code>即可直接运行shell命令。比如<code>&gt; cat *.py | grep print，可以直接打开终端并查找当前py文件中包含 print 的语句。</code></li>
<li><code>控制itunes播放</code>，输入iTunes，会出现一个 iTunes mini play，打开可以通过 Alfred 控制音乐播放。用快捷键也能完成这个功能：shift+option+command+p</li>
<li>输入email，后面跟邮件地址，可以直接打开写邮件的界面</li>
<li><code>定义文字片段和粘贴板</code>，在 Alfred 的设置-Features 选中Clipboard，在Snippets里定义自己常用的文字片段，比如代码、地址等等等，之后以<code>option+command+l</code> (<em>这个快捷键是我自己定义的，原先的和其他的快捷键有冲突</em>)呼出界面，输入文字片段的关键字回车即可。<em><u>这里可以保存很长时间的粘贴板的内容，赞！！！</u></em></li>
<li><p><code>自定义搜索</code>，这个稍微复杂些，打开设置窗口，点击Features-Custom Search，在右侧栏添加自定义搜索。举几个例子帮助大家理解下规则：</p>
<ul>
<li><p>搜索iOS App：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Search URL：</span><br><span class="line">itunes://ax.search.itunes.apple.com/WebObjects/MZSearch.woa/wa/search?term=&#123;query&#125;</span><br><span class="line">Title：iOS App</span><br></pre></td></tr></table></figure>
</li>
<li><p>搜索Mac app:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Search URL:</span><br><span class="line">macappstore://ax.search.itunes.apple.com/WebObjects/MZSearch.woa/wa/search?q=&#123;query&#125;</span><br><span class="line">Title: mac app</span><br><span class="line">keywords: mac</span><br></pre></td></tr></table></figure>
</li>
</ul>
</li>
</ul>
<h2 id="workflow-插件"><a href="#workflow-插件" class="headerlink" title="workflow 插件"></a>workflow 插件</h2><blockquote>
<p>alfred给予了用户很大的自由度去对其进行扩展，这就是workflow插件机制，用户可以按照一定的开发规范，开发各自的任务插件，比如打电话、发短信、播放音乐，搜索天气等等…是不是非常的强大！</p>
<p>With Alfred’s Powerpack and workflows, you can extend Alfred and get things done in your own way. Replace repetitive tasks with workflows, and boost your productivity.</p>
</blockquote>
<h3 id="先看看我的workflow"><a href="#先看看我的workflow" class="headerlink" title="先看看我的workflow"></a>先看看我的workflow</h3><p><img src="/images/myalfred_workflow.png" alt="myalfredworkflow"></p>
<blockquote>
<p>有非常多的这种workflow可以供我们下载使用：当然我们也可以去Google，一搜一大堆，或者直接安装一个叫<code>workflow search</code>的workflow,直接在alfred上搜，下面提供两个比较常用的搜索地址：<br><a href="https://www.alfredapp.com/workflows" target="_blank" rel="external">https://www.alfredapp.com/workflows</a><br><a href="http://www.alfredworkflow.com" target="_blank" rel="external">http://www.alfredworkflow.com</a></p>
</blockquote>
<h4 id="workflow-search"><a href="#workflow-search" class="headerlink" title="workflow search"></a>workflow search</h4><p>这个插件可以随时直接在搜索框中搜索可用的workflow,并下载，关键字是：<code>wf</code><br><img src="/images/workflow_search.png" alt="workflow_search"></p>
<h4 id="baidu-weather"><a href="#baidu-weather" class="headerlink" title="baidu weather"></a>baidu weather</h4><p>直接查看当前城市的天气状况，关键字：<code>tq</code><br><img src="/images/baidu_weather.png" alt="baidu_weather"></p>
<h4 id="air-quality"><a href="#air-quality" class="headerlink" title="air quality"></a>air quality</h4><p>查看当前城市的空气质量, 关键字： <code>air</code><br><img src="/images/air_quality.png" alt="air_quality"></p>
<h4 id="copy-path"><a href="#copy-path" class="headerlink" title="copy path"></a>copy path</h4><p>这个workflow 直接做成快捷键的方式，在finder里面选中文件后，直接快捷键：<code>ctrl-shift-c</code> 即可拷贝当前文件的绝对路径<br><img src="/images/copy_path.png" alt="copy_path"></p>
<h4 id="有道翻译"><a href="#有道翻译" class="headerlink" title="有道翻译"></a>有道翻译</h4><p>直接在搜索框中翻译，自动转换中英文， 关键字： <code>yd</code><br><img src="/images/youdao.png" alt="youdao"></p>
<h4 id="知乎日报"><a href="#知乎日报" class="headerlink" title="知乎日报"></a>知乎日报</h4><p>直接查看知乎日报的热门文章列表， 关键字： <code>zh</code><br><img src="/images/zhihudaily.png" alt="zhihudaily"></p>
<h4 id="人民币金额大写"><a href="#人民币金额大写" class="headerlink" title="人民币金额大写"></a>人民币金额大写</h4><p>直接转换人民币金额的大写中文， 关键字： <code>cny</code><br><img src="/images/cny.png" alt="cny"></p>
<h4 id="stackoverflow-搜索"><a href="#stackoverflow-搜索" class="headerlink" title="stackoverflow 搜索"></a>stackoverflow 搜索</h4><p>直接搜索stackoverflow上的相关答案信息，关键字： <code>.so</code><br><img src="/images/stackoverflow_wf.png" alt="stackoverflow"></p>
<h4 id="电话呼叫"><a href="#电话呼叫" class="headerlink" title="电话呼叫"></a>电话呼叫</h4><p>直接呼叫iphone上的联系人： 关键字: <code>call</code> 这个貌似不支持电话薄的查询，需要每次都输入电话号码，比较麻烦<br><img src="/images/call.png" alt="call"><br><img src="/images/calling.png" alt="calling"></p>
<h4 id="evernote-搜索"><a href="#evernote-搜索" class="headerlink" title="evernote 搜索"></a>evernote 搜索</h4><p>搜索印象笔记中的内容，同时可以新建笔记，<br>关键字：en 搜索笔记，ennew 新建笔记<br><img src="/images/evernote.png" alt="evernote"></p>
<h4 id="百度地图搜索"><a href="#百度地图搜索" class="headerlink" title="百度地图搜索"></a>百度地图搜索</h4><p>搜索百度地图，<br>关键字： setl: 设置当前城市， bmap 定位具体地点<br><img src="/images/baidumap.png" alt="baidumap"></p>
<h4 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h4><blockquote class="blockquote-center"><p>alfred 的一般基本功能已经能满足日常大部分的使用了，而且比spotlight要好用的多，付费的powerpak－workflow进一步提升了这个工具的逼格，把玩过后，我只想说，不要太牛掰啊！</p>
</blockquote>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Atom快捷键整理]]></title>
      <url>http://kriswan.github.io/2016/06/08/Atom%E5%BF%AB%E6%8D%B7%E9%94%AE%E6%95%B4%E7%90%86/</url>
      <content type="html"><![CDATA[<p><img src="/images/atom-light-640x360.jpg" alt="atom"></p>
<h2 id="Atom快捷键"><a href="#Atom快捷键" class="headerlink" title="Atom快捷键"></a>Atom快捷键</h2><blockquote>
<p>最近在用文本编辑器Atom, 这里整理下这个工具的一些比较常用的快捷键<br>这里只针对平时用的频率比较高的Atom的一些快捷键做整理</p>
</blockquote>
<ul>
<li><code>ctrl-shift-U</code> 调出切换编码选项 <em><u>切换编码哦</u></em></li>
</ul>
<h3 id="文件切换"><a href="#文件切换" class="headerlink" title="文件切换"></a>文件切换</h3><ul>
<li><code>alt-cmd-s</code> 保存所有打开的文件</li>
<li><code>cmd-o</code> 打开文件目录</li>
<li><code>cmd-\</code> 显示或隐藏目录树</li>
<li><code>cmd-t</code> 查找文件</li>
<li><code>cmd-b</code> 在打开的文件之间切换</li>
<li><code>ctrl-shift-c</code> 复制当前文件绝对路径</li>
</ul>
<h3 id="目录树操作"><a href="#目录树操作" class="headerlink" title="目录树操作"></a>目录树操作</h3><ul>
<li><code>ctrl-0</code> 焦点切换到目录树(再按一次或者Esc退出目录树)<ul>
<li><code>a</code> 添加文件</li>
<li><code>d</code> 将当前文件另存为(duplicate)</li>
<li><code>i</code> 显示(隐藏)版本控制忽略的文件</li>
<li><code>delete</code> 删除文件</li>
</ul>
</li>
<li><code>alt-right 和 alt-left</code> 展开(隐藏)所有目录</li>
<li><code>ctrl-al-] 和 ctrl-al-[</code> 同上</li>
<li><code>ctrl-[ 和 ctrl-]</code> 展开(隐藏)当前目录</li>
<li><code>ctrl-f 和 ctrl-b</code> 同上</li>
</ul>
<h3 id="导航"><a href="#导航" class="headerlink" title="导航"></a>导航</h3><ul>
<li><code>ctrl-p</code> 前一行</li>
<li><code>ctrl-n</code> 后一行</li>
<li><code>ctrl-f</code> 前进一个字符</li>
<li><code>ctrl-b</code> 后退一个字符</li>
<li><code>cmd-right, ctrl-E</code> 移动到一行结束</li>
<li><code>cmd-left, ctrl-A</code> 移动到一行开始</li>
<li><code>cmd-up</code> 移动到文件开始</li>
<li><code>cmd-down</code> 移动到文件结束</li>
<li><code>ctrl-g</code> 移动到指定行 <code>行号</code> 处</li>
<li><code>cmd-r</code> 在方法之间跳转</li>
</ul>
<h3 id="文本选取"><a href="#文本选取" class="headerlink" title="文本选取"></a>文本选取</h3><ul>
<li><code>ctrl-shift-P</code> 选取至上一行</li>
<li><code>ctrl-shift-N</code> 选取至下一样</li>
<li><code>ctrl-shift-E, cmd-shift-right</code> 选取至本行结束</li>
<li><code>ctrl-shift-A, cmd-shift-left</code> 选取至本行开始</li>
<li><code>cmd-shift-up</code> 选取至文件开始</li>
<li><code>cmd-shift-down</code> 选取至文件结尾</li>
<li><code>cmd-click</code> 增加新光标 <em><u>这个帅气</u></em></li>
<li><code>cmd-shift-L</code> 将多行选取改为多行光标 <em><u>可以利用这个搞多行编辑</u></em></li>
<li><code>cmd-D</code> 选取文档中和当前单词相同的下一处 <em><u>黑科技啊</u></em></li>
<li><code>ctrl-cmd-G</code> 选取文档中所有和当前光标单词相同的位置</li>
</ul>
<h3 id="文本编辑"><a href="#文本编辑" class="headerlink" title="文本编辑"></a>文本编辑</h3><ul>
<li><code>cmd-K, cmd-U</code> 使当前字符大写</li>
<li><code>cmd-K, cmd-L</code> 使当前字符小写</li>
<li><code>ctrl-shift-K</code> 删除当前行</li>
<li><code>cmd-backspace</code> 删除到当前行开始</li>
<li><code>cmd-fn-backspace</code> 删除到当前行结束</li>
</ul>
<h3 id="括号跳转"><a href="#括号跳转" class="headerlink" title="括号跳转"></a>括号跳转</h3><ul>
<li><code>ctrl-m</code> 相应括号之间，html tag之间等跳转</li>
<li><code>ctrl-cmd-m</code> 括号(tag)之间文本选取</li>
<li><code>alt-cmd-.</code> 关闭当前XML/HTML tag</li>
</ul>
<h3 id="查找"><a href="#查找" class="headerlink" title="查找"></a>查找</h3><ul>
<li><code>cmd-F</code> 在buffer中查找</li>
<li><code>cmd-shift-f</code> 在整个工程中查找</li>
</ul>
<h3 id="代码操作"><a href="#代码操作" class="headerlink" title="代码操作"></a>代码操作</h3><ul>
<li><code>alt-cmd-[</code> 折叠</li>
<li><code>alt-cmd-]</code> 展开</li>
<li><code>alt-cmd-shift-{</code> 折叠全部</li>
<li><code>alt-cmd-shift-}</code> 展开全部</li>
<li><code>cmd-k cmd-N</code> 指定折叠层级 N为层级数</li>
<li><code>ctrl-space</code> 提示补全信息</li>
</ul>
<h3 id="文件类型选择"><a href="#文件类型选择" class="headerlink" title="文件类型选择"></a>文件类型选择</h3><ul>
<li><code>ctrl-shift-L</code> 选择文本类型  <em><u>选择当前文件的文本类型哦</u></em></li>
<li><code>ctrl-shift-M</code> Markdown预览</li>
<li><code>alt-shift-S</code> 代码片段查找</li>
</ul>
<h3 id="格式化beautify"><a href="#格式化beautify" class="headerlink" title="格式化beautify"></a>格式化beautify</h3><ul>
<li><code>ctrl-alt-b</code> 格式化</li>
</ul>
<h2 id="MacOS快捷键"><a href="#MacOS快捷键" class="headerlink" title="MacOS快捷键"></a>MacOS快捷键</h2><blockquote>
<p>mac系统上的快捷键做了一次整理，方便自己<br>鼠标扔掉 ?<br>触摸板扔掉 ？</p>
</blockquote>
<p><img src="/images/macbookpro.jpg" alt="macbookpro"></p>
<h3 id="系统标示符"><a href="#系统标示符" class="headerlink" title="系统标示符"></a>系统标示符</h3><blockquote>
<p>Mac 菜单和键盘通常使用符号来代表某些按键，其中包括以下修饰键：</p>
</blockquote>
<ul>
<li>Command ⌘</li>
<li>Shift ⇧</li>
<li>Option ⌥</li>
<li>Control ⌃</li>
<li>Caps Lock ⇪</li>
<li>Fn</li>
</ul>
<h3 id="系统常用快捷键"><a href="#系统常用快捷键" class="headerlink" title="系统常用快捷键"></a>系统常用快捷键</h3><table>
<thead>
<tr>
<th>快捷键</th>
<th>描述</th>
<th>备注</th>
</tr>
</thead>
<tbody>
<tr>
<td>Command-G</td>
<td>再次查找：查找之前所找到项目出现的下一个位置。要查找其出现的上一个位置，请按 Command-Shift-G。</td>
<td>这个有用啊</td>
</tr>
<tr>
<td>Command-M</td>
<td>将最前端的窗口最小化至 Dock。要最小化最前端应用的所有窗口，请按 Command-Option-M。</td>
<td>看片的时候有用哦</td>
</tr>
<tr>
<td>Command-H</td>
<td>隐藏最前端应用的窗口。要查看最前端的应用但隐藏所有其他应用，请按 Command-Option-H。</td>
<td></td>
</tr>
<tr>
<td>Option-Command-Esc</td>
<td>强制退出：选择要强制退出的应用。或者，按住 Command-Shift-Option-Esc 3 秒钟可仅强制最前端的应用退出。</td>
<td></td>
</tr>
<tr>
<td>Shift-Command-3</td>
<td>屏幕快照：拍摄整个屏幕的屏幕快照</td>
<td></td>
</tr>
<tr>
<td>Command-逗号 (,)</td>
<td>偏好设置：打开最前端应用的偏好设置</td>
<td></td>
</tr>
</tbody>
</table>
<h3 id="系统设置快捷键"><a href="#系统设置快捷键" class="headerlink" title="系统设置快捷键"></a>系统设置快捷键</h3><table>
<thead>
<tr>
<th>快捷键</th>
<th>描述</th>
<th>备注</th>
</tr>
</thead>
<tbody>
<tr>
<td>电源按钮</td>
<td>轻按可打开 Mac 或将 Mac 从睡眠状态唤醒。 按住此按钮 5 秒钟会强制 Mac 关机。</td>
<td></td>
</tr>
<tr>
<td>Control–Command–电源按钮</td>
<td>强制 Mac 重新启动。</td>
<td></td>
</tr>
<tr>
<td>Control–Shift–（电源按钮或介质推出键）</td>
<td>将显示器置于睡眠状态。</td>
<td></td>
</tr>
<tr>
<td>Control–Command–介质推出键</td>
<td>退出所有应用，然后重新启动 Mac。如果任何打开的文稿有未存储的更改，系统将询问您是否要存储这些更改。</td>
<td></td>
</tr>
<tr>
<td>Control–Option–Command–（电源按钮或介质推出键）</td>
<td>退出所有应用，然后关闭 Mac。如果任何打开的文稿有未存储的更改，系统将询问您是否要存储这些更改。</td>
<td></td>
</tr>
<tr>
<td>Shift-Command-Q</td>
<td>注销您的 OS X 用户帐户。系统将提示您确认。</td>
<td></td>
</tr>
</tbody>
</table>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[分布式事物(－)]]></title>
      <url>http://kriswan.github.io/2016/06/02/%E5%88%86%E5%B8%83%E5%BC%8F%E4%BA%8B%E7%89%A9-%EF%BC%8D/</url>
      <content type="html"><![CDATA[<blockquote>
<p>关于分布式事务的一点学习总结</p>
</blockquote>
<h3 id="设计模型"><a href="#设计模型" class="headerlink" title="设计模型"></a>设计模型</h3><p>采用类似TCC的事务模型，每个事务参与者都提供try, confirm, cancel的逻辑。在每个事务参与者的业务库的同一个实例都放一个事务所使用的库，简称事务库。</p>
<h4 id="Try状态"><a href="#Try状态" class="headerlink" title="Try状态"></a>Try状态</h4><p>尝试执行，比如对数据进行校验，检查事务是否可以进行等。并且在事务库里创建一条记录。此时记录中的状态字段记录为PENDING</p>
<h4 id="Confirm状态"><a href="#Confirm状态" class="headerlink" title="Confirm状态"></a>Confirm状态</h4><p>如果所有事务参与者的TRY都返回则表示可以进行，则提交事务。提交事务时在同一个本地事务里修改TRY阶段创建记录的状态为CONFIRM</p>
<h4 id="Cancel状态"><a href="#Cancel状态" class="headerlink" title="Cancel状态"></a>Cancel状态</h4><p>如果有任何一个事务参与者TRY阶段失败则发起CANCEL操作，并且在同一个本地事务里修改事务记录为CANCEL</p>
<h3 id="事物冲突"><a href="#事物冲突" class="headerlink" title="事物冲突"></a>事物冲突</h3><p>在分布式环境中，可能对同一个数据进行并发操作，这样就会带来冲突。比如两个并发执行的事务可能对同一个订单进行修改，这可能造成冲突。这里的解决办法是我们给每种业务都分配一个business id，然后每个操作的资源都有一个resource id(比如这里就是订单号)。当一个事务要执行的时候我们可以判断对于同一个business id和resource id，是不是有未完成的事务(状态是PENDING)，如果有则拒绝事务执行。</p>
<h3 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h3><ul>
<li>每个事务开始时候会获取一个全局唯一的事务号(transaction id)，该id会传递给所有的事务参与者并记录到事务参与者的事务记录中</li>
<li>事务协调器会根据事务记录中的状态对各事务参与者进行重试操作。比如主事务记录中状态是CONFIRM，则要重试到所有事务参与者的状态都到CONFIRM为止</li>
</ul>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[关于流控RateLimit]]></title>
      <url>http://kriswan.github.io/2016/05/22/%E5%85%B3%E4%BA%8E%E6%B5%81%E6%8E%A7RateLimit/</url>
      <content type="html"><![CDATA[<p><img src="/images/SmoothWarmingUpRatelimit.png" alt="SmoothWarmingUpRatelimit"></p>
<blockquote><p>关于流控的一点总结</p>
</blockquote>
<h3 id="flow-need-to-be-controled"><a href="#flow-need-to-be-controled" class="headerlink" title="flow need to be controled"></a>flow need to be controled</h3><img src="/2016/05/22/关于流控RateLimit/water-flow.jpg" alt="water is comming !" title="water is comming !">
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Hexo介绍]]></title>
      <url>http://kriswan.github.io/2016/05/13/Hexo%E4%BB%8B%E7%BB%8D/</url>
      <content type="html"><![CDATA[<p><img src="/images/hexo_logo.png" alt="hexo_logo"></p>
<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="external">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="external">documentatoin</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="external">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="external">GitHub</a>.</p>
<h2 id="hexo-一些相关的命令"><a href="#hexo-一些相关的命令" class="headerlink" title="hexo 一些相关的命令"></a>hexo 一些相关的命令</h2><blockquote class="blockquote-center"><p>这里会介绍一些hexo相关的命令 </p>
</blockquote>
<h3 id="一些博客链接"><a href="#一些博客链接" class="headerlink" title="一些博客链接"></a>一些博客链接</h3><p><a href="http://ibruce.info/2013/11/22/hexo-your-blog/" target="_blank" rel="external">搭建博客连接:http://ibruce.info/2013/11/22/hexo-your-blog/</a></p>
<h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><p>新建一篇文章<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure></p>
<p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="external">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><p>本地服务器启动，可以在本地看到博客的情况，方便测试<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure></p>
<p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="external">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><p>生成hexo静态文件<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure></p>
<p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="external">Server</a></p>
<h3 id="Clean-public-folder-files"><a href="#Clean-public-folder-files" class="headerlink" title="Clean public folder files"></a>Clean public folder files</h3><p>清除public文件夹下的已经生成的静态文件<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo clean</span><br></pre></td></tr></table></figure></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><p>部署到github上的master分支上去<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure></p>
<p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="external">Deployment</a></p>
<h2 id="Hexo-的一些独特的标签-tag"><a href="#Hexo-的一些独特的标签-tag" class="headerlink" title="Hexo 的一些独特的标签 tag"></a>Hexo 的一些独特的标签 tag</h2><p><img src="/images/tags.gif" alt="blank-tags"></p>
<blockquote class="blockquote-center"><p>Now, We’ll talk a little bit hexo tag plugins, To help you munipulate you blog easily!</p>
</blockquote>
<h3 id="居中引言-centerquote"><a href="#居中引言-centerquote" class="headerlink" title="居中引言 centerquote"></a>居中引言 centerquote</h3>
{% centerquote %} 引言放这里 {% endcenterquote %}

<blockquote class="blockquote-center"><p>引言放这里 </p>
</blockquote>
<h3 id="左对齐引言-blockquote"><a href="#左对齐引言-blockquote" class="headerlink" title="左对齐引言 blockquote"></a>左对齐引言 blockquote</h3>
{% blockquote David Levithan, Wide Awake http://wanders.com.cn 万的个人网站 %}
摘要引言放这里
{% endblockquote %}

<p>引言：<br><blockquote><p>Do not just seek happiness for yourself. Seek happiness for all. Through kindness. Through mercy.</p>
<footer><strong>David Levithan, Wide Awake</strong><cite><a href="http://wanders.com.cn" target="_blank" rel="external">万的个人网站</a></cite></footer></blockquote></p>
<h3 id="插入图片"><a href="#插入图片" class="headerlink" title="插入图片"></a>插入图片</h3><ul>
<li><code>![/images/blank-tags.png](/images/blank-tags.png)</code>  这个是标准的markdown的插入图片的语法</li>
<li> {% asset_img water-flow.jpg water is comming ! %}  这种标签标示的时候<code>water-flow.jpg</code>必须要在文章同级目录下的同名文件夹下<br>图片：<br><img src="/images/blank-tags.jpg" alt="/images/blank-tags.jpg"></li>
</ul>
<h3 id="插入视频-add-a-youtubu-video"><a href="#插入视频-add-a-youtubu-video" class="headerlink" title="插入视频 add a youtubu video"></a>插入视频 add a youtubu video</h3> {% youtube wgdBVIX9ifA %} 
<p>这里是视频id=wgdBVIX9ifA:<br><div class="video-container"><iframe src="//www.youtube.com/embed/wgdBVIX9ifA" frameborder="0" allowfullscreen></iframe></div></p>
<h3 id="嵌入一段代码-代码是根路径下的文件：gulpfile-js"><a href="#嵌入一段代码-代码是根路径下的文件：gulpfile-js" class="headerlink" title="嵌入一段代码,代码是根路径下的文件：gulpfile.js"></a>嵌入一段代码,代码是根路径下的文件：gulpfile.js</h3> {% include_code [gulpfile] [lang:javascript] gulpfile.js %} 
<figure class="highlight javascript"><figcaption><span>[gulpfile] []</span><a href="/downloads/code/gulpfile.js">view raw</a></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> gulp = <span class="built_in">require</span>(<span class="string">'gulp'</span>);</span><br><span class="line"><span class="keyword">var</span> minifycss = <span class="built_in">require</span>(<span class="string">'gulp-minify-css'</span>);</span><br><span class="line"><span class="keyword">var</span> uglify = <span class="built_in">require</span>(<span class="string">'gulp-uglify'</span>);</span><br><span class="line"><span class="keyword">var</span> htmlmin = <span class="built_in">require</span>(<span class="string">'gulp-htmlmin'</span>);</span><br><span class="line"><span class="keyword">var</span> htmlclean = <span class="built_in">require</span>(<span class="string">'gulp-htmlclean'</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 压缩 public 目录 css</span></span><br><span class="line">gulp.task(<span class="string">'minify-css'</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>{</span><br><span class="line">    <span class="keyword">return</span> gulp.src(<span class="string">'./public/**/*.css'</span>)</span><br><span class="line">        .pipe(minifycss())</span><br><span class="line">        .pipe(gulp.dest(<span class="string">'./public'</span>));</span><br><span class="line">});</span><br><span class="line"><span class="comment">// 压缩 public 目录 html</span></span><br><span class="line">gulp.task(<span class="string">'minify-html'</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>{</span><br><span class="line">  <span class="keyword">return</span> gulp.src(<span class="string">'./public/**/*.html'</span>)</span><br><span class="line">    .pipe(htmlclean())</span><br><span class="line">    .pipe(htmlmin({</span><br><span class="line">         removeComments: <span class="literal">true</span>,</span><br><span class="line">         minifyJS: <span class="literal">true</span>,</span><br><span class="line">         minifyCSS: <span class="literal">true</span>,</span><br><span class="line">         minifyURLs: <span class="literal">true</span>,</span><br><span class="line">    }))</span><br><span class="line">    .pipe(gulp.dest(<span class="string">'./public'</span>))</span><br><span class="line">});</span><br><span class="line"><span class="comment">// 压缩 public/js 目录 js</span></span><br><span class="line">gulp.task(<span class="string">'minify-js'</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>{</span><br><span class="line">    <span class="keyword">return</span> gulp.src(<span class="string">'./public/**/*.js'</span>)</span><br><span class="line">        .pipe(uglify())</span><br><span class="line">        .pipe(gulp.dest(<span class="string">'./public'</span>));</span><br><span class="line">});</span><br><span class="line"><span class="comment">// 执行 gulp 命令时执行的任务</span></span><br><span class="line">gulp.task(<span class="string">'default'</span>, [</span><br><span class="line">    <span class="string">'minify-html'</span>,<span class="string">'minify-css'</span>,<span class="string">'minify-js'</span></span><br><span class="line">]);</span><br></pre></td></tr></table></figure>
<h3 id="给代码片段加入一个URL-codeblock"><a href="#给代码片段加入一个URL-codeblock" class="headerlink" title="给代码片段加入一个URL codeblock"></a>给代码片段加入一个URL codeblock</h3>
  {% codeblock _.compact http://underscorejs.org/#compact Underscore.js %}
    code put here
  {% endcodeblock %}

<figure class="highlight plain"><figcaption><span>_.compact</span><a href="http://underscorejs.org/#compact" target="_blank" rel="external">Underscore.js</a></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">_.compact([0, 1, false, 2, &apos;&apos;, 3]);</span><br><span class="line">=&gt; [1, 2, 3]</span><br></pre></td></tr></table></figure>
<h3 id="普通段落引言"><a href="#普通段落引言" class="headerlink" title="普通段落引言"></a>普通段落引言</h3> {% pullquote [qut] %}{% endpullquote %}
<blockquote class="pullquote [qut]"><p>you wanna quote something, you’d better place it here!</p>
</blockquote>
<h3 id="嵌入一个网页-add-a-iframe"><a href="#嵌入一个网页-add-a-iframe" class="headerlink" title="嵌入一个网页 add a iframe"></a>嵌入一个网页 add a iframe</h3> {% iframe http://www.bing.com 100% 100% %} 
<p>页面：<br><iframe src="http://www.bing.com" width="100%" height="100%" frameborder="0" allowfullscreen></iframe></p>
<h3 id="原始文字-raw"><a href="#原始文字-raw" class="headerlink" title="原始文字 raw"></a>原始文字 raw</h3> {% raw %} what ever you put here {% endraw %} 

 If certain content is causing processing issues in your posts, wrap it with the raw tag to avoid rendering errors.

<h3 id="邮件-mail-to-me"><a href="#邮件-mail-to-me" class="headerlink" title="邮件 mail to me"></a>邮件 mail to me</h3><a href="&#x6d;&#97;&#x69;&#x6c;&#x74;&#111;&#x3a;&#x6b;&#114;&#x69;&#x73;&#119;&#x61;&#110;&#115;&#x66;&#64;&#103;&#109;&#x61;&#x69;&#x6c;&#x2e;&#99;&#x6f;&#109;">&#x6b;&#114;&#x69;&#x73;&#119;&#x61;&#110;&#115;&#x66;&#64;&#103;&#109;&#x61;&#x69;&#x6c;&#x2e;&#99;&#x6f;&#109;</a>
]]></content>
    </entry>
    
  
  
</search>
